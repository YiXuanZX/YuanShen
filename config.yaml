# 订阅更新和延迟测试相关
p: &p {type: http, interval: 86400, health-check: {enable: true, url: https://cp.cloudflare.com, interval: 300}}
# 策略组相关
pr: &pr {type: select, proxies: [全部节点, 香港, 台湾, 新加坡, 日本, 美国, 其他, 直连]}
pr1: &pr1 {type: select, proxies: [直连, 全部节点, 香港, 台湾, 新加坡, 日本, 美国, 其他]}
pr2: &pr2 {type: select, include-all: true, exclude-type: direct}

# url 里填写自己的订阅,名称不能重复
proxy-providers:
  provider1:
    <<: *p
    url: ""
    path: ./proxy_providers/provider1.yaml
    exclude-filter: "(?i)Traffic|Expire"

proxies: 
  - {name: "直连", type: direct, udp: true}

mixed-port: 7890
ipv6: true
allow-lan: false
unified-delay: false
tcp-concurrent: true
external-controller: 127.0.0.1:9090
external-ui: ui
external-ui-url: "https://github.com/Zephyruso/zashboard/archive/refs/heads/gh-pages.zip"

find-process-mode: strict
global-client-fingerprint: chrome

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  skip-domain:
    - "Mijia Cloud"
    - "+.push.apple.com"

tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

dns:
  enable: true
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-filter:
    - "*"
    - "rule-set:real-ip,private,cn"
  nameserver:
    - 223.5.5.5
    - 119.29.29.29
  proxy-server-nameserver:
    - system
  nameserver-policy:
    "rule-set:private,cn":
      - system

proxy-groups:
  - {name: 全部节点, type: select, proxies: [香港, 台湾, 新加坡, 日本, 美国, 其他, 直连]}
  - {name: LAN, <<: *pr1}
  - {name: AI, <<: *pr}
  - {name: Github, <<: *pr}
  - {name: Google, <<: *pr}
  - {name: Telegram, <<: *pr}
  - {name: Twitter, <<: *pr}
  - {name: YouTube, <<: *pr}
  - {name: 国外, <<: *pr}
  - {name: 国内, <<: *pr1}
  - {name: Final, <<: *pr}

  # 分隔,下面是地区分组
  - {name: 香港, <<: *pr2, filter: "(?i)港|hk|hongkong|hong kong"}
  - {name: 台湾, <<: *pr2, filter: "(?i)台|tw|taiwan"}
  - {name: 新加坡, <<: *pr2, filter: "(?i)(新|狮|sg|singapore)"}
  - {name: 日本, <<: *pr2, filter: "(?i)日|jp|japan"}
  - {name: 美国, <<: *pr2, filter: "(?i)美|us|unitedstates|united states"}
  - {name: 其他, <<: *pr2, filter: "(?i)^(?!.*(?:港|hk|hongkong|台|tw|taiwan|新|狮|sg|singapore|日|jp|japan|美|us|unitedstates)).*"}

rules:
  - RULE-SET,private_ip,LAN,no-resolve
  - RULE-SET,private,LAN
  - RULE-SET,ai,AI
  - RULE-SET,github,Github
  - RULE-SET,google,Google
  - RULE-SET,telegram,Telegram
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,twitter,Twitter
  - RULE-SET,youtube,YouTube
  - RULE-SET,non-cn,国外
  - RULE-SET,cn,国内
  - RULE-SET,cn_ip,国内
  - MATCH,Final

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
rule-providers:
  ai:
    <<: *domain
    path: ./rule_providers/ai.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/ai.mrs"
  cn:
    <<: *domain
    path: ./rule_providers/cn.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/ChinaMax/ChinaMax_OCD_Domain.mrs"
  cn_ip:
    <<: *ip
    path: ./rule_providers/cn_ip.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/cnip.mrs"
  github:
    <<: *domain
    path: ./rule_providers/github.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/GitHub/GitHub_OCD_Domain.mrs"
  google:
    <<: *domain
    path: ./rule_providers/google.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Google/Google_OCD_Domain.mrs"
  non-cn:
    <<: *domain
    path: ./rule_providers/non-cn.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Global/Global_OCD_Domain.mrs"
  private:
    <<: *domain
    path: ./rule_providers/private.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Lan/Lan_OCD_Domain.mrs"
  private_ip:
    <<: *ip
    path: ./rule_providers/private_ip.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Lan/Lan_OCD_IP.mrs"
  real-ip:
    <<: *domain
    path: ./rule_providers/real-ip.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/fakeip-filter.mrs"
  telegram:
    <<: *domain
    path: ./rule_providers/telegram.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Telegram/Telegram_OCD_Domain.mrs"
  telegram_ip:
    <<: *ip
    path: ./rule_providers/telegram_ip.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Telegram/Telegram_OCD_IP.mrs"
  twitter:
    <<: *domain
    path: ./rule_providers/twitter.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/Twitter/Twitter_OCD_Domain.mrs"
  youtube:
    <<: *domain
    path: ./rule_providers/youtube.mrs
    url: "https://raw.githubusercontent.com/peiyingyao/Rule-for-OCD/master/rule/Clash/YouTube/YouTube_OCD_Domain.mrs"
